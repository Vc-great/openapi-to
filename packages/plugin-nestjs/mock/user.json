{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "sigqcxfqb1fpx"
  },
  "info": {
    "title": "nestjs-1",
    "version": "1.0",
    "summary": "全局概要",
    "description": "全局描述"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "nestjs"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "summary": "用户列表",
        "operationId": "get-user",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "parameters": [],
        "x-permissions": [
          "admin"
        ],
        "description": "查询用户列表"
      },
      "parameters": []
    },
    "/users/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Get User Info by User ID",
        "tags": [],
        "responses": {
          "200": {
            "description": "User Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "User Not Found"
          }
        },
        "operationId": "get-users-userId",
        "description": "Retrieve the information of the user with the matching user ID.",
        "parameters": []
      },
      "patch": {
        "summary": "Update User Information",
        "operationId": "patch-users-userId",
        "responses": {
          "200": {
            "description": "User Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Updated User Rebecca Baker": {
                    "value": {
                      "id": 13,
                      "firstName": "Rebecca",
                      "lastName": "Baker",
                      "email": "rebecca@gmail.com",
                      "dateOfBirth": "1985-10-02",
                      "emailVerified": false,
                      "createDate": "2019-08-24"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "description": "Update the information of an existing user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "description": "If a new email is given, the user's email verified property will be set to false."
                  },
                  "dateOfBirth": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Update First Name": {
                  "value": {
                    "firstName": "Rebecca"
                  }
                },
                "Update Email": {
                  "value": {
                    "email": "rebecca@gmail.com"
                  }
                },
                "Update Last Name & Date of Birth": {
                  "value": {
                    "lastName": "Baker",
                    "dateOfBirth": "1985-10-02"
                  }
                }
              }
            }
          },
          "description": "Patch user properties to update."
        }
      },
      "put": {
        "summary": "",
        "operationId": "put-users-userId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/pet": {
      "get": {
        "summary": "查询宠物列表",
        "tags": [
          "pet"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FindOne"
          }
        },
        "operationId": "findAll",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "createTime",
            "required": true,
            "description": "创建时间"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "1",
                "2"
              ],
              "uniqueItems": true
            },
            "in": "query",
            "name": "time",
            "description": "时间"
          },
          {
            "$ref": "#/components/parameters/ref1"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "a",
                "b",
                "c"
              ]
            },
            "in": "query",
            "name": "enumString",
            "description": "a:1,b,c:3"
          },
          {
            "$ref": "#/components/parameters/pageNo"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "a",
                "b",
                "c"
              ],
              "default": "a"
            },
            "in": "query",
            "name": "enum1",
            "description": "枚举值"
          },
          {
            "$ref": "#/components/parameters/userId"
          },
          {
            "$ref": "#/components/parameters/cooickid"
          }
        ],
        "description": "查询宠物",
        "security": [
          {
            "http": []
          }
        ],
        "x-extension-1": [
          "admin"
        ]
      },
      "post": {
        "tags": ["pet"],
        "summary": "",
        "operationId": "post-pet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateUserDTO",
                  "x-stoplight": {
                    "id": "vuegluxx57smg"
                  }
                }
              },
              "examples": {
                "Example啊啊啊啊": {
                  "value": [
                    {
                      "id": 0,
                      "firstName": "string",
                      "lastName": "string",
                      "email": "user@example.com",
                      "dateOfBirth": "1997-10-31",
                      "emailVerified": true,
                      "createDate": "2019-08-24"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "",
        "operationId": "put-pet",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/bodyschema"
        },
        "tags": [
          "pet"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserDTO": {
        "title": "User",
        "type": "object",
        "examples": [],
        "x-stoplight": {
          "id": "azh27tso0x04m"
        },
        "description": "我是模型的描述",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Set to true if the user's email has been verified."
          },
          "createDate": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          },
          "": {
            "type": "string",
            "x-stoplight": {
              "id": "o5jazb37j8g33"
            }
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "emailVerified",
          "createDate"
        ]
      },
      "order": {
        "title": "Order",
        "x-stoplight": {
          "id": "vj4q7qz0wvjbn"
        },
        "type": "object",
        "examples": [
          {
            "id": "string",
            "name": "2"
          }
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "x-stoplight": {
              "id": "022fuzjt1ewan"
            },
            "default": 1,
            "example": "2",
            "type": "string",
            "minLength": 1,
            "maxLength": 6
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "sss": {
            "type": "string",
            "x-stoplight": {
              "id": "8nhqfh4epxvga"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "http": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "asd"
      }
    },
    "requestBodies": {
      "UserbodyRef": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "啊啊啊啊啊"
      },
      "bodyschema": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "a": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "g57k509l5ta48"
                  }
                },
                "b": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "s8918pcd85izb"
                  }
                },
                "c": {
                  "$ref": "#/components/schemas/order",
                  "x-stoplight": {
                    "id": "g1xaucj6whm5e"
                  }
                },
                "data": {
                  "type": "array",
                  "x-stoplight": {
                    "id": "nrad7y30u23wu"
                  },
                  "items": {
                    "x-stoplight": {
                      "id": "ui15rhcgp1nxc"
                    },
                    "type": "object",
                    "properties": {
                      "z": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "zdav7eysta1j5"
                        }
                      },
                      "x": {
                        "type": "number",
                        "x-stoplight": {
                          "id": "lnkt3eyihh8yh"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "我是bodyschema描述"
      }
    },
    "responses": {
      "FindOne": {
        "description": "我是FindOne的描述",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "parameters": {
      "ref1": {
        "name": "ref",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "ref 引入"
      },
      "pageNo": {
        "schema": {
          "type": "number",
          "exclusiveMinimum": true,
          "minimum": 1,
          "default": 1
        },
        "in": "query",
        "name": "pageNo",
        "description": "当前页"
      },
      "pageSize": {
        "schema": {
          "type": "number",
          "format": "float"
        },
        "in": "query",
        "name": "pageSize",
        "description": "数据条数"
      },
      "times": {
        "name": "times",
        "in": "query",
        "required": false,
        "schema": {
          "format": "time"
        },
        "style": "form",
        "description": "时间啊"
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "['id:asc','name:desc']"
        },
        "description": "排序"
      },
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "number"
        },
        "description": "path id"
      },
      "userId": {
        "name": "userId",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "用户id"
      },
      "cooickid": {
        "name": "cooickid",
        "in": "cookie",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "cooickid"
      }
    }
  },
  "security": [
    {
      "auth": []
    }
  ],
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ]
}
