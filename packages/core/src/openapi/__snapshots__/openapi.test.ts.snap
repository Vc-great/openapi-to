// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`openapi get pathGroupByTag > get pathGroupByTag 1`] = `
{
  "pet": [
    {
      "method": "post",
      "path": "/pet/test",
      "tag": "pet",
    },
    {
      "method": "put",
      "path": "/pet/test",
      "tag": "pet",
    },
    {
      "method": "delete",
      "path": "/pet/test",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet/test/{id}",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet/{id}",
      "tag": "pet",
    },
    {
      "method": "post",
      "path": "/pet/{petId}/uploadImage",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet",
      "tag": "pet",
    },
    {
      "method": "post",
      "path": "/pet",
      "tag": "pet",
    },
    {
      "method": "put",
      "path": "/pet",
      "tag": "pet",
    },
    {
      "method": "delete",
      "path": "/pet",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet/findByStatus",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet/findByTags",
      "tag": "pet",
    },
    {
      "method": "get",
      "path": "/pet/{petId}",
      "tag": "pet",
    },
    {
      "method": "post",
      "path": "/pet/{petId}",
      "tag": "pet",
    },
    {
      "method": "delete",
      "path": "/pet/{petId}",
      "tag": "pet",
    },
  ],
  "store": [
    {
      "method": "post",
      "path": "/store/order",
      "tag": "store",
    },
    {
      "method": "get",
      "path": "/store/order/{orderId}",
      "tag": "store",
    },
    {
      "method": "delete",
      "path": "/store/order/{orderId}",
      "tag": "store",
    },
    {
      "method": "get",
      "path": "/store/inventory",
      "tag": "store",
    },
  ],
  "user": [
    {
      "method": "post",
      "path": "/user/createWithArray",
      "tag": "user",
    },
    {
      "method": "post",
      "path": "/user/createWithList",
      "tag": "user",
    },
    {
      "method": "get",
      "path": "/user/{username}",
      "tag": "user",
    },
    {
      "method": "put",
      "path": "/user/{username}",
      "tag": "user",
    },
    {
      "method": "delete",
      "path": "/user/{username}",
      "tag": "user",
    },
    {
      "method": "get",
      "path": "/user/login",
      "tag": "user",
    },
    {
      "method": "get",
      "path": "/user/logout",
      "tag": "user",
    },
    {
      "method": "post",
      "path": "/user",
      "tag": "user",
    },
  ],
}
`;

exports[`openapi requestbody > tag requestBody 1`] = `
[
  {
    "$ref": "#/components/requestBodies/testDto",
    "refName": "testDto",
    "requestBodyObject": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/testDto",
          },
        },
      },
      "description": "resources",
      "required": true,
    },
    "tags": [
      "pet",
    ],
  },
  {
    "$ref": "#/components/requestBodies/Pet",
    "refName": "Pet",
    "requestBodyObject": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/Pet",
          },
        },
        "application/xml": {
          "schema": {
            "$ref": "#/components/schemas/Pet",
          },
        },
      },
      "description": "Pet object that needs to be added to the store",
      "required": true,
    },
    "tags": [
      "pet",
    ],
  },
  {
    "$ref": "#/components/requestBodies/UserArray",
    "refName": "UserArray",
    "requestBodyObject": {
      "content": {
        "application/json": {
          "schema": {
            "items": {
              "$ref": "#/components/schemas/User",
            },
            "type": "array",
          },
        },
      },
      "description": "List of user object",
      "required": true,
    },
    "tags": [
      "user",
    ],
  },
]
`;

exports[`openapi response > getResponseAsJSONSchema 200 1`] = `
{
  "description": "Example response",
  "refName": "test3214",
  "schema": {
    "properties": {
      "columnDefault": {
        "description": "默认值",
        "type": "string",
      },
      "columnLength": {
        "description": "description",
        "format": "int32",
        "type": "integer",
      },
      "columnName": {
        "description": "description",
        "type": "string",
      },
      "columnRemark": {
        "description": "description",
        "type": "string",
      },
      "columnScale": {
        "description": "description",
        "format": "int32",
        "type": "integer",
      },
      "columnType": {
        "description": "description",
        "enum": [
          "CHAR",
        ],
        "type": "string",
      },
      "delFlag": {
        "description": "description",
        "type": "boolean",
      },
      "formId": {
        "format": "int64",
        "type": "integer",
      },
      "id": {
        "description": "id",
        "format": "int64",
        "type": "integer",
      },
      "notNull": {
        "description": "description",
        "type": "boolean",
      },
    },
    "title": "test3214",
    "type": "object",
  },
  "type": "object",
}
`;

exports[`openapi response > successResponseJSONSchema 1`] = `
{
  "description": "OK",
  "refName": "testDto2",
  "schema": {
    "properties": {
      "content": {
        "$ref": "#/components/schemas/testDto3",
      },
      "meta": {
        "$ref": "#/components/schemas/testdata",
      },
    },
    "title": "Response«testDto3»",
    "type": "object",
  },
  "type": "object",
}
`;

exports[`openapi response > tag groupResponsesByTag 1`] = `
[
  {
    "$ref": "#/components/responses/FindOne",
    "description": "This can only be done by the logged in user.",
    "refName": "FindOne",
    "responseObject": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/test3214",
          },
        },
      },
      "description": "Example response",
    },
    "tags": [
      "user",
    ],
  },
]
`;
