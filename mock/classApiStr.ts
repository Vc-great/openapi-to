export const classApiStr = {
  apiCode:
    "\n          \n//TODO: 修正引用\n        import type {ListQueryRequest,UpdateBodyRequest,CreateBodyRequest,DelBodyRequest,AllQueryRequest,ForkBodyRequest,SyncFeedbackQueryRequest,TaskAndIdListQueryRequest,DetailByIdPathRequest,DetailByIdQueryRequest,DataPathRequest,DataQueryRequest,AddRelateDataPathRequest,AddRelateDataBodyRequest,CreateDbPathRequest,RemoveRelateDataPathRequest,RemoveRelateDataBodyRequest,StartTriggerPathRequest} from './types'\n    import request from '@/api/request'\n    /*\n           *@tag名称 任务管理.\n           *@tag描述 Task Controller.\n           */\n    class ApiName {\n        \n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:查询dataUploadingTask \n    */\n         list(query:ListQueryRequest):Promise<[object,ListResponse]>{\n      return request.get({\n        url:`tasks`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:修改dataUploadingTask \n    */\n         update(body:UpdateBodyRequest):Promise<[object,UpdateResponse]>{\n      return request.put({\n        url:`tasks`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:新增dataUploadingTask \n    */\n         create(body:CreateBodyRequest):Promise<[object,CreateResponse]>{\n      return request.post({\n        url:`tasks`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:删除dataUploadingTask \n    */\n         del(body:DelBodyRequest):Promise<[object,DelResponse]>{\n      return request.delete({\n        url:`tasks`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:查询dataUploadingTask \n    */\n         all(query:AllQueryRequest):Promise<[object,AllResponse]>{\n      return request.get({\n        url:`tasks/all`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:复制（打开）dataUploadingTask \n    */\n         fork(body:ForkBodyRequest):Promise<[object,ForkResponse]>{\n      return request.post({\n        url:`tasks/fork`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:uploadTaskSyncFeedBack \n    */\n         syncFeedback(query:SyncFeedbackQueryRequest):Promise<[object,SyncFeedbackResponse]>{\n      return request.get({\n        url:`tasks/sync-feedback`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:查询委端任务下拉，id：任务表id，taskName：委端任务名 \n    */\n         taskAndIdList(query:TaskAndIdListQueryRequest):Promise<[object,TaskAndIdListResponse]>{\n      return request.get({\n        url:`tasks/taskAndIdList`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:查询dataUploadingTask详情 \n    */\n         detailById(id:DetailByIdPathRequest,query:DetailByIdQueryRequest):Promise<[object,DetailByIdResponse]>{\n      return request.get({\n        url:`tasks/${id}`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:查询上报任务关联的上报数据 \n    */\n         data(id:DataPathRequest,query:DataQueryRequest):Promise<[object,DataResponse]>{\n      return request.get({\n        url:`tasks/${id}/data`,\nparams:query\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:追加关联上报数据 \n    */\n         addRelateData(taskId:AddRelateDataPathRequest,body:AddRelateDataBodyRequest):Promise<[object,AddRelateDataResponse]>{\n      return request.put({\n        url:`tasks/${taskId}/add-relateData`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:creatdb \n    */\n         createDb(taskId:CreateDbPathRequest):Promise<[object,CreateDbResponse]>{\n      return request.post({\n        url:`tasks/${taskId}/create-db`\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:移除已关联的上报数据 \n    */\n         removeRelateData(taskId:RemoveRelateDataPathRequest,body:RemoveRelateDataBodyRequest):Promise<[object,RemoveRelateDataResponse]>{\n      return request.delete({\n        url:`tasks/${taskId}/remove-relateData`,\ndata:body\n      })\n    }\n        \n    /*\n    *@tag名称: 任务管理\n    *@接口名称:startTrigge \n    */\n         startTrigger(taskId:StartTriggerPathRequest):Promise<[object,StartTriggerResponse]>{\n      return request.post({\n        url:`tasks/${taskId}/start-trigger`\n      })\n    }\n        }\n        const apiName = new ApiName\n        \n        export { apiName }\n    ",
};
