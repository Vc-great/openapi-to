export const classApiStr = {
  title: "pet",
  codeString:
    "//TODO: edit import\nimport type { ApiType } from './types';\nimport request from '@/api/request';\n/*\n *@tag名称 pet.\n *@tag描述 pet.\n */\nclass ApiName {\n    /*\n     *@tag名称: pet\n     *@接口名称:uploads an image\n     */\n    uploadImage(\n        petId: ApiType.UploadImagePathRequest,\n        body: ApiType.UploadImageBodyRequest\n    ): Promise<[object, ApiType.UploadImageResponse]> {\n        //todo 上传文件\n        const formData = new FormData();\n        formData.append('file', file);\n\n        return request.post({\n            url: `/pet/${petId}/uploadImage`,\n            data: body,\n            headers: { 'Content-Type': 'multipart/form-data' },\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Update an existing pet\n     */\n    update(body: ApiType.UpdateBodyRequest): Promise<[object, ApiType.UpdateResponse]> {\n        return request.put({\n            url: `/pet`,\n            data: body,\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Add a new pet to the store\n     */\n    create(body: ApiType.CreateBodyRequest): Promise<[object, ApiType.CreateResponse]> {\n        return request.post({\n            url: `/pet`,\n            data: body,\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Finds Pets by status\n     */\n    findByStatus(query: ApiType.FindByStatusQueryRequest): Promise<[object, ApiType.FindByStatusResponse]> {\n        return request.get({\n            url: `/pet/findByStatus`,\n            params: query,\n            paramsSerializer(params) {\n                return qs.stringify(params);\n            },\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Finds Pets by tags\n     */\n    findByTags(query: ApiType.FindByTagsQueryRequest): Promise<[object, ApiType.FindByTagsResponse]> {\n        return request.get({\n            url: `/pet/findByTags`,\n            params: query,\n            paramsSerializer(params) {\n                return qs.stringify(params);\n            },\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Find pet by ID\n     */\n    detailByPetId(petId: ApiType.DetailByPetIdPathRequest): Promise<[object, ApiType.DetailByPetIdResponse]> {\n        return request.get({\n            url: `/pet/${petId}`,\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Updates a pet in the store with form data\n     */\n    petId(petId: ApiType.PetIdPathRequest, body: ApiType.PetIdBodyRequest): Promise<[object, ApiType.PetIdResponse]> {\n        return request.post({\n            url: `/pet/${petId}`,\n            data: body,\n        });\n    }\n\n    /*\n     *@tag名称: pet\n     *@接口名称:Deletes a pet\n     */\n    petId(petId: ApiType.PetIdPathRequest): Promise<[object, ApiType.PetIdResponse]> {\n        return request.delete({\n            url: `/pet/${petId}`,\n        });\n    }\n}\nconst apiName = new ApiName();\n\nexport { apiName };\n",
};
