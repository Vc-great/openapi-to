export const typeRunExpected = {
  title: "任务管理",
  codeString:
    "//eslint-disable-next-line @typescript-eslint/no-namespace\n/**\n *@tag名称 任务管理\n *@Description Task Controller\n */\n//todo edit namespace name\nexport namespace ApiType {\n    /** 查询dataUploadingTask*/\n    export interface ListQueryRequest {\n        /** 业务类型 */\n        businessTypeCode?: string;\n        /** ID */\n        id?: number;\n        /** 页码 (0..N)，默认为0 */\n        page: number;\n        /** 每页显示的数目,默认为10 */\n        size: number;\n        /** 以下列格式排序标准：property[,asc | desc]。 默认排序顺序为升序。 支持多种排序条件：如：id,asc */\n        sort?: string[];\n        /** 启动时间 */\n        startTime?: string[];\n        /** 状态 */\n        state?: number;\n        /** 委端任务id */\n        taskId?: number;\n        /** 任务名称 */\n        taskName?: string;\n        /** 任务类型0.测试数据，1.正式数据 */\n        taskType?: string;\n        /** 业务类型编码 */\n        typeCode?: string;\n    }\n\n    /** 查询dataUploadingTask */\n    export interface ListResponse {\n        /**状态码，非http status，是业务自定义的状态码*/\n        code?: number;\n        /**Page«dataUploadingTask»*/\n        content?: Page_dataUploadingTask;\n        /**返回结果详细信息*/\n        message?: string;\n        /**PageMetadata*/\n        metadata?: PageMetadata;\n        /***/\n        name?: string;\n        /**服务调用时长（ms）*/\n        timeConsumed?: number;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description 服务器端的时间戳\n         */\n        timestamp?: string;\n        /**返回结果摘要信息*/\n        title?: string;\n        /**code码对应的http uri说明*/\n        type?: string;\n    }\n    export interface Page_dataUploadingTask {\n        /**dataUploadingTask*/\n        content?: DataUploadingTask[];\n        /***/\n        empty?: boolean;\n        /***/\n        first?: boolean;\n        /***/\n        last?: boolean;\n        /***/\n        number?: number;\n        /***/\n        numberOfElements?: number;\n        /**Page*/\n        pageable?: Page;\n        /***/\n        size?: number;\n        /**Sort*/\n        sort?: Sort;\n        /***/\n        totalElements?: number;\n        /***/\n        totalPages?: number;\n    }\n    export interface PageMetadata {\n        /**页数*/\n        number?: number;\n        /**每页数量*/\n        numberOfElements?: number;\n        /**总数量*/\n        totalElements?: number;\n        /**总页数*/\n        totalPages?: number;\n    }\n    export interface DataUploadingTask {\n        /**上报文件附件id*/\n        attachmentId?: string;\n        /**上报文件附件名*/\n        attachmentName?: string;\n        /**批次ID*/\n        batchId?: number;\n        /**业务类型编码*/\n        businessTypeCode?: string;\n        /**关联数据id集合*/\n        dataIdList?: number[];\n        /**删除标识(0未删除、1已删除)*/\n        delFlag?: number;\n        /**Timestamp*/\n        delTime?: Timestamp;\n        /**异常指标数*/\n        exceptionIndexCount?: number;\n        /**Map«string,object»*/\n        feedBackList?: Map_stringobject[];\n        /**首次返回结果json*/\n        firstReturnFeedBack?: string;\n        /**首次返回结果文件id*/\n        firstReturnFile?: string;\n        /**Timestamp*/\n        firstReturnTime?: Timestamp;\n        /**ID*/\n        id?: number;\n        /**备注*/\n        remark?: string;\n        /**国资委返回的文件id*/\n        returnFileId?: number;\n        /**二次返回结果文件id*/\n        secondReturnFile?: string;\n        /**Timestamp*/\n        secondReturnTime?: Timestamp;\n        /**Timestamp*/\n        startTime?: Timestamp;\n        /**任务状态,0.待关联任务 1.已关联，待上报 2.已上报（调用国资委上报接口成功）*/\n        state?: number;\n        /**任务采集表id*/\n        subterminalTaskCollectionId?: number;\n        /**任务描述*/\n        taskDescribe?: string;\n        /**委端任务ID*/\n        taskId?: number;\n        /**任务名称*/\n        taskName?: string;\n        /**任务类型 0测试数据1正式数据*/\n        taskType?: number;\n        /**三次返回结果文件id*/\n        thirdReturnFile?: string;\n        /**Timestamp*/\n        thirdReturnTime?: Timestamp;\n        /**上报文件id*/\n        uploadFiles?: string;\n        /**上报文件db文件名*/\n        uploadFilesName?: string;\n    }\n    export interface Page {\n        /**页码 (0..N)，默认为0*/\n        page: number;\n        /**每页显示的数目,默认为10*/\n        size: number;\n        /**以下列格式排序标准：property[,asc | desc]。 默认排序顺序为升序。 支持多种排序条件：如：id,asc*/\n        sort?: string[];\n    }\n    export interface Sort {\n        /***/\n        empty?: boolean;\n        /***/\n        sorted?: boolean;\n        /***/\n        unsorted?: boolean;\n    }\n    export interface Timestamp {\n        /***/\n        date?: number;\n        /***/\n        day?: number;\n        /***/\n        hours?: number;\n        /***/\n        minutes?: number;\n        /***/\n        month?: number;\n        /***/\n        nanos?: number;\n        /***/\n        seconds?: number;\n        /***/\n        time?: number;\n        /***/\n        timezoneOffset?: number;\n        /***/\n        year?: number;\n    }\n    /**Map«string,object»*/\n    export type Map_stringobject = object;\n\n    /** 修改dataUploadingTask */\n    export interface UpdateBodyRequest {\n        /**上报文件附件id*/\n        string?: string;\n        /**\n         *@remark content transferred in binary (octet-stream)\n         *@description binary\n         */\n        binary?: string;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description date\n         */\n        date?: string;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description date-time\n         */\n        date2?: string;\n        /**password*/\n        password?: string;\n        /**数据来源方式（db文件、视图、api接口、url等）*/\n        sourceType?: 'DB_CONNECTION' | 'API_INTERFACE';\n        /**批次ID*/\n        batchId?: number;\n        /**异常指标数*/\n        exceptionIndexCount?: number;\n        /**number*/\n        number?: number;\n        /**double*/\n        number1?: number;\n        /**数据id集合*/\n        dataIdList?: number[];\n        /**DataUploadingModeDto*/\n        dataUploadingModeDtoList?: DataUploadingModeDto[];\n        /**是否有机构信息(0否、1是)*/\n        hasOrgInfo?: boolean;\n        /**Timestamp*/\n        delTime?: Timestamp;\n        /**Timestamp*/\n        firstReturnTime?: Timestamp;\n    }\n\n    /** 修改dataUploadingTask */\n    export interface UpdateResponse {\n        /**状态码，非http status，是业务自定义的状态码*/\n        code?: number;\n        /**dataUploadingTask*/\n        content?: DataUploadingTask;\n        /**返回结果详细信息*/\n        message?: string;\n        /**PageMetadata*/\n        metadata?: PageMetadata;\n        /***/\n        name?: string;\n        /**服务调用时长（ms）*/\n        timeConsumed?: number;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description 服务器端的时间戳\n         */\n        timestamp?: string;\n        /**返回结果摘要信息*/\n        title?: string;\n        /**code码对应的http uri说明*/\n        type?: string;\n    }\n    export interface DataUploadingModeDto {\n        /**数据库列名*/\n        columnName?: string;\n        /**列标签(普通:REGULAR,所属企业:ORG_NAME,唯一标识:UNIQUE_FLAG,更新时间:UPDATE_TIME,数据名称:DATE_NAME)*/\n        columnTag?:\n            | 'REGULAR'\n            | 'ORG_NAME'\n            | 'ORG_CODE'\n            | 'GROUP_CODE'\n            | 'UNIQUE_FLAG'\n            | 'UPDATE_TIME'\n            | 'DATA_NAME'\n            | 'OPERATION_FLAG';\n        /**指标数据长度*/\n        dataSize?: number;\n        /**指标数据类型(number、text、longtext、boolean)*/\n        dataType?: 'CHAR' | 'INT' | 'TEXT' | 'FLOAT' | 'DATE' | 'ATTACHMENT';\n        /***/\n        id?: number;\n        /**指标编码*/\n        modeCode?: string;\n        /**指标说明*/\n        modeDescribe?: string;\n        /**指标标识*/\n        modeField?: string;\n        /**指标名称*/\n        modeName?: string;\n        /**是否表主键*/\n        primaryKeyFlag?: boolean;\n        /**是否必填（0否，1是）*/\n        requiredFlag?: boolean;\n        /**数据类型id*/\n        typeId: number;\n        /**是否表内唯一*/\n        uniqueFlag?: boolean;\n        /**值约束*/\n        valueRules?: string;\n    }\n    /** 新增dataUploadingTask */\n    export interface CreateBodyRequest extends UpdateBodyRequest {}\n    /** 新增dataUploadingTask */\n    export interface CreateResponse extends UpdateResponse {}\n    /** 删除dataUploadingTask */\n    export type DelBodyRequest = number[];\n\n    /** 删除dataUploadingTask */\n    export interface DelResponse {\n        /**状态码，非http status，是业务自定义的状态码*/\n        code?: number;\n        /**返回数据类型*/\n        content?: object;\n        /**返回结果详细信息*/\n        message?: string;\n        /**PageMetadata*/\n        metadata?: PageMetadata;\n        /***/\n        name?: string;\n        /**服务调用时长（ms）*/\n        timeConsumed?: number;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description 服务器端的时间戳\n         */\n        timestamp?: string;\n        /**返回结果摘要信息*/\n        title?: string;\n        /**code码对应的http uri说明*/\n        type?: string;\n    }\n    /** 查询dataUploadingTask*/\n    export interface AllQueryRequest {\n        /** 业务类型 */\n        businessTypeCode?: string;\n        /** ID */\n        id?: number;\n        /** 启动时间 */\n        startTime?: string[];\n        /** 状态 */\n        state?: number;\n        /** 委端任务id */\n        taskId?: number;\n        /** 任务名称 */\n        taskName?: string;\n        /** 任务类型0.测试数据，1.正式数据 */\n        taskType?: string;\n        /** 业务类型编码 */\n        typeCode?: string;\n    }\n    /** 查询dataUploadingTask */\n    export interface AllResponse extends ListResponse {}\n    /** 复制（打开）dataUploadingTask */\n    export interface ForkBodyRequest extends UpdateBodyRequest {}\n    /** 复制（打开）dataUploadingTask */\n    export interface ForkResponse extends UpdateResponse {}\n    /** uploadTaskSyncFeedBack*/\n    export interface SyncFeedbackQueryRequest {\n        /** id */\n        id: number;\n    }\n\n    /** uploadTaskSyncFeedBack */\n    export interface SyncFeedbackResponse {\n        /**状态码，非http status，是业务自定义的状态码*/\n        code?: number;\n        /**返回结果详细信息*/\n        message?: string;\n        /**PageMetadata*/\n        metadata?: PageMetadata;\n        /***/\n        name?: string;\n        /**服务调用时长（ms）*/\n        timeConsumed?: number;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description 服务器端的时间戳\n         */\n        timestamp?: string;\n        /**返回结果摘要信息*/\n        title?: string;\n        /**code码对应的http uri说明*/\n        type?: string;\n    }\n    /** 查询委端任务下拉，id：任务表id，taskName：委端任务名*/\n    export interface TaskAndIdListQueryRequest {\n        /** businessTypeCode */\n        businessTypeCode: string;\n    }\n    /** 查询委端任务下拉，id：任务表id，taskName：委端任务名 */\n    export interface TaskAndIdListResponse extends DelResponse {}\n    /** 查询dataUploadingTask详情*/\n    export interface DetailByIdQueryRequest {\n        /** fields */\n        fields?: string[];\n    }\n    /**\n     *@名称 查询dataUploadingTask详情\n     *@tag名称 任务管理\n     */\n    export interface DetailByIdPathRequest {\n        /** id */\n        id: number;\n    }\n    /** 查询dataUploadingTask详情 */\n    export interface DetailByIdResponse extends UpdateResponse {}\n    /** 查询上报任务关联的上报数据*/\n    export interface DataQueryRequest {\n        /** 数据名称 */\n        dataName?: string;\n        /** 数据唯一标识 */\n        dataUniqueCode?: string;\n        /**  */\n        dataUploadingTypeId?: number;\n        /**  */\n        id?: number;\n        /** 操作标识（add新增，edit修改，del删除） */\n        operationFlag?: string;\n        /** 所属企业 */\n        orgId?: number;\n        /** 所属企业名称 */\n        orgName?: string;\n        /** 父id */\n        pid?: number;\n        /** 状态(待关联0 待上报1 已上报2) */\n        state?: number;\n        /** 是否是子类型 */\n        subType?: boolean;\n        /** 委端任务id */\n        taskId?: number;\n    }\n    /**\n     *@名称 查询上报任务关联的上报数据\n     *@tag名称 任务管理\n     */\n    export interface DataPathRequest {\n        /** id */\n        id: number;\n    }\n\n    /** 查询上报任务关联的上报数据 */\n    export interface DataResponse {\n        /**状态码，非http status，是业务自定义的状态码*/\n        code?: number;\n        /**上报空间*/\n        content?: 上报空间[];\n        /**返回结果详细信息*/\n        message?: string;\n        /**PageMetadata*/\n        metadata?: PageMetadata;\n        /***/\n        name?: string;\n        /**服务调用时长（ms）*/\n        timeConsumed?: number;\n        /**\n         *@remark RFC 3339 yyyy-MM-dd HH:mm:ss\n         *@description 服务器端的时间戳\n         */\n        timestamp?: string;\n        /**返回结果摘要信息*/\n        title?: string;\n        /**code码对应的http uri说明*/\n        type?: string;\n    }\n    export interface 上报空间 {\n        /**表数据id*/\n        dataId?: number;\n        /**数据JSON*/\n        dataJson?: string;\n        /**数据名称*/\n        dataName?: string;\n        /**数据类型id*/\n        dataTypeId?: number;\n        /**主数据UID标识*/\n        dataUid?: string;\n        /**Timestamp*/\n        dataUpdateTime?: Timestamp;\n        /**删除标识(0未删除、1已删除)*/\n        delFlag?: boolean;\n        /**异常反馈id*/\n        exceptionFeedbackId?: number;\n        /**集团编码*/\n        groupCode?: string;\n        /**ID*/\n        id?: number;\n        /**操作标识（add新增，edit修改，del删除）*/\n        operationFlag?: 'add' | 'edit' | 'del';\n        /**企业编码*/\n        orgCode?: string;\n        /**企业名称*/\n        orgName?: string;\n        /**父级id*/\n        pid?: number;\n        /**Timestamp*/\n        reportTime?: Timestamp;\n        /**状态(0:待关联,1:已关联,2:数据已提交,3:上报失败,4:上报成功)*/\n        state?: number;\n        /**是否是子类型*/\n        subType?: boolean;\n        /**委端任务*/\n        subterminalTaskCollection?: 委端任务;\n        /**dataUploadingTask*/\n        szydDataUploadingTask?: DataUploadingTask;\n        /**委端任务id*/\n        taskId?: number;\n        /**业务类型编码*/\n        typeCode?: string;\n    }\n    export interface Timestamp {\n        /**委端文件获取方式（枚举）*/\n        acquireType?: 'FRONT_PROCESSOR';\n        /**业务类型编码*/\n        businessTypeCode?: string;\n        /**业务类型*/\n        businessTypeName?: string;\n        /**删除标识(0未删除、1已删除)*/\n        delFlag?: boolean;\n        /**任务结束时间*/\n        endDate?: string;\n        /**前置机信息*/\n        frontProcessorInfo?: string;\n        /**ID*/\n        id?: number;\n        /**委内任务id*/\n        insideTaskId?: number;\n        /**上报任务数量*/\n        reportTaskNum?: number;\n        /**获取文件请求接口*/\n        requestInterface?: string;\n        /**获取文件请求参数*/\n        requestParams?: string;\n        /**在本系统转存资源表文件ids，多个文件用英文逗号分割*/\n        resFileInfoId?: string;\n        /**采集任务包含的资源表id列表*/\n        resInfoId?: string;\n        /**获取文件接口返回结果*/\n        returnData?: string;\n        /**任务开始时间*/\n        startDate?: string;\n        /**系统编码*/\n        systemCode?: number;\n        /**任务创建时间*/\n        taskCreateTime?: string;\n        /**任务描述*/\n        taskDescription?: string;\n        /**任务数据示例文件名称*/\n        taskFileName?: string;\n        /**在本系统转存任务数据示例文件的资源表文件ids，多个文件用英文逗号分割*/\n        taskFileNameId?: string;\n        /**委端任务id*/\n        taskId?: number;\n        /**任务名称*/\n        taskName?: string;\n        /**任务状态*/\n        taskStatus?: string;\n    }\n    /** 追加关联上报数据 */\n    export interface AddRelateDataBodyRequest extends DelBodyRequest {}\n    /**\n     *@名称 追加关联上报数据\n     *@tag名称 任务管理\n     */\n    export interface AddRelateDataPathRequest {\n        /** task-id */\n        taskId: number;\n    }\n    /** 追加关联上报数据 */\n    export interface AddRelateDataResponse extends UpdateResponse {}\n    /**\n     *@名称 creatdb\n     *@tag名称 任务管理\n     */\n    export interface CreateDbPathRequest {\n        /** task-id */\n        taskId: number;\n    }\n    /** creatdb */\n    export interface CreateDbResponse extends DelResponse {}\n    /** 移除已关联的上报数据 */\n    export interface RemoveRelateDataBodyRequest extends DelBodyRequest {}\n    /**\n     *@名称 移除已关联的上报数据\n     *@tag名称 任务管理\n     */\n    export interface RemoveRelateDataPathRequest {\n        /** task-id */\n        taskId: number;\n    }\n    /** 移除已关联的上报数据 */\n    export interface RemoveRelateDataResponse extends UpdateResponse {}\n    /**\n     *@名称 startTrigge\n     *@tag名称 任务管理\n     */\n    export interface StartTriggerPathRequest {\n        /** task-id */\n        taskId: number;\n    }\n    /** startTrigge */\n    export interface StartTriggerResponse extends DelResponse {}\n}\n\n/**数据来源方式（db文件、视图、api接口、url等）*/\nexport const enum SourceTypeLabel {\n    DB_CONNECTION = '',\n    API_INTERFACE = '',\n}\n/**数据来源方式（db文件、视图、api接口、url等）*/\nexport const enum SourceType {\n    DB_CONNECTION = 'DB_CONNECTION',\n    API_INTERFACE = 'API_INTERFACE',\n}\n/**数据来源方式（db文件、视图、api接口、url等）*/\nexport const SourceTypeOption = [\n    { label: SourceTypeLabel.DB_CONNECTION, value: SourceType.DB_CONNECTION },\n    { label: SourceTypeLabel.API_INTERFACE, value: SourceType.API_INTERFACE },\n];\n/**列标签(普通:REGULAR,所属企业:ORG_NAME,唯一标识:UNIQUE_FLAG,更新时间:UPDATE_TIME,数据名称:DATE_NAME)*/\nexport const enum ColumnTagLabel {\n    REGULAR = '',\n    ORG_NAME = '',\n    ORG_CODE = '',\n    GROUP_CODE = '',\n    UNIQUE_FLAG = '',\n    UPDATE_TIME = '',\n    DATA_NAME = '',\n    OPERATION_FLAG = '',\n}\n/**列标签(普通:REGULAR,所属企业:ORG_NAME,唯一标识:UNIQUE_FLAG,更新时间:UPDATE_TIME,数据名称:DATE_NAME)*/\nexport const enum ColumnTag {\n    REGULAR = 'REGULAR',\n    ORG_NAME = 'ORG_NAME',\n    ORG_CODE = 'ORG_CODE',\n    GROUP_CODE = 'GROUP_CODE',\n    UNIQUE_FLAG = 'UNIQUE_FLAG',\n    UPDATE_TIME = 'UPDATE_TIME',\n    DATA_NAME = 'DATA_NAME',\n    OPERATION_FLAG = 'OPERATION_FLAG',\n}\n/**列标签(普通:REGULAR,所属企业:ORG_NAME,唯一标识:UNIQUE_FLAG,更新时间:UPDATE_TIME,数据名称:DATE_NAME)*/\nexport const ColumnTagOption = [\n    { label: ColumnTagLabel.REGULAR, value: ColumnTag.REGULAR },\n    { label: ColumnTagLabel.ORG_NAME, value: ColumnTag.ORG_NAME },\n    { label: ColumnTagLabel.ORG_CODE, value: ColumnTag.ORG_CODE },\n    { label: ColumnTagLabel.GROUP_CODE, value: ColumnTag.GROUP_CODE },\n    { label: ColumnTagLabel.UNIQUE_FLAG, value: ColumnTag.UNIQUE_FLAG },\n    { label: ColumnTagLabel.UPDATE_TIME, value: ColumnTag.UPDATE_TIME },\n    { label: ColumnTagLabel.DATA_NAME, value: ColumnTag.DATA_NAME },\n    { label: ColumnTagLabel.OPERATION_FLAG, value: ColumnTag.OPERATION_FLAG },\n];\n/**指标数据类型(number、text、longtext、boolean)*/\nexport const enum DataTypeLabel {\n    CHAR = '',\n    INT = '',\n    TEXT = '',\n    FLOAT = '',\n    DATE = '',\n    ATTACHMENT = '',\n}\n/**指标数据类型(number、text、longtext、boolean)*/\nexport const enum DataType {\n    CHAR = 'CHAR',\n    INT = 'INT',\n    TEXT = 'TEXT',\n    FLOAT = 'FLOAT',\n    DATE = 'DATE',\n    ATTACHMENT = 'ATTACHMENT',\n}\n/**指标数据类型(number、text、longtext、boolean)*/\nexport const DataTypeOption = [\n    { label: DataTypeLabel.CHAR, value: DataType.CHAR },\n    { label: DataTypeLabel.INT, value: DataType.INT },\n    { label: DataTypeLabel.TEXT, value: DataType.TEXT },\n    { label: DataTypeLabel.FLOAT, value: DataType.FLOAT },\n    { label: DataTypeLabel.DATE, value: DataType.DATE },\n    { label: DataTypeLabel.ATTACHMENT, value: DataType.ATTACHMENT },\n];\n/**操作标识（add新增，edit修改，del删除）*/\nexport const enum OperationFlagLabel {\n    add = '',\n    edit = '',\n    del = '',\n}\n/**操作标识（add新增，edit修改，del删除）*/\nexport const enum OperationFlag {\n    add = 'add',\n    edit = 'edit',\n    del = 'del',\n}\n/**操作标识（add新增，edit修改，del删除）*/\nexport const OperationFlagOption = [\n    { label: OperationFlagLabel.add, value: OperationFlag.add },\n    { label: OperationFlagLabel.edit, value: OperationFlag.edit },\n    { label: OperationFlagLabel.del, value: OperationFlag.del },\n];\n/**委端文件获取方式（枚举）*/\nexport const enum AcquireTypeLabel {\n    FRONT_PROCESSOR = '',\n}\n/**委端文件获取方式（枚举）*/\nexport const enum AcquireType {\n    FRONT_PROCESSOR = 'FRONT_PROCESSOR',\n}\n/**委端文件获取方式（枚举）*/\nexport const AcquireTypeOption = [{ label: AcquireTypeLabel.FRONT_PROCESSOR, value: AcquireType.FRONT_PROCESSOR }];\n",
};
