export const typeRunExpected = {
  title: "pet",
  codeString:
    "//eslint-disable-next-line @typescript-eslint/no-namespace\n/**\n *@tag名称 pet\n *@Description pet\n */\n//todo edit namespace name\nexport namespace ApiType {\n    /** uploads an image */\n    export interface UploadImageBodyRequest {\n        /**Additional data to pass to server*/\n        additionalMetadata?: string;\n        /**\n         *@remark content transferred in binary (octet-stream)\n         *@description file to upload\n         */\n        file?: string;\n    }\n    /** uploads an image*/\n    export interface UploadImagePathRequest {\n        /** ID of pet to update */\n        petId: number;\n    }\n    /** uploads an image */\n    export interface UploadImageResponse {\n        /***/\n        code?: number;\n        /***/\n        type?: string;\n        /***/\n        message?: string;\n    }\n    /** Update an existing pet */\n    export interface UpdateBodyRequest {\n        /***/\n        id?: number;\n        /***/\n        category?: Category;\n        /***/\n        name: string;\n        /***/\n        photoUrls: string[];\n        /***/\n        tags?: Tag[];\n        /**pet status in the store*/\n        status?: 'available' | 'pending' | 'sold';\n    }\n    /** Update an existing pet */\n    export interface UpdateResponse {}\n    /**undefined*/\n    export interface Category {\n        /***/\n        id?: number;\n        /***/\n        name?: string;\n    }\n    /**undefined*/\n    export interface Tag {\n        /***/\n        id?: number;\n        /***/\n        name?: string;\n    }\n    /** Add a new pet to the store */\n    export interface CreateBodyRequest extends UpdateBodyRequest {}\n    /** Add a new pet to the store */\n    export interface CreateResponse {}\n    /** Finds Pets by status*/\n    export interface FindByStatusQueryRequest {\n        /** Status values that need to be considered for filter */\n        status: string[];\n    }\n    /** Finds Pets by status */\n    export interface FindByStatusResponse {}\n    /** Finds Pets by tags*/\n    export interface FindByTagsQueryRequest {\n        /** Tags to filter by */\n        tags: string[];\n    }\n    /** Finds Pets by tags */\n    export interface FindByTagsResponse {}\n    /** Find pet by ID*/\n    export interface DetailByPetIdPathRequest {\n        /** ID of pet to return */\n        petId: number;\n    }\n    /** Find pet by ID */\n    export interface DetailByPetIdResponse extends UpdateBodyRequest {}\n    /** Updates a pet in the store with form data */\n    export interface PetIdBodyRequest {\n        /**Updated name of the pet*/\n        name?: string;\n        /**Updated status of the pet*/\n        status?: string;\n    }\n    /** Updates a pet in the store with form data*/\n    export interface PetIdPathRequest {\n        /** ID of pet that needs to be updated */\n        petId: number;\n    }\n    /** Updates a pet in the store with form data */\n    export interface PetIdResponse {}\n    /** Deletes a pet*/\n    export interface PetIdPathRequest {\n        /** Pet id to delete */\n        petId: number;\n    }\n    /** Deletes a pet */\n    export interface PetIdResponse {}\n}\n\n/**pet status in the store*/\nexport const enum StatusLabel {\n    available = '',\n    pending = '',\n    sold = '',\n}\n/**pet status in the store*/\nexport const enum Status {\n    available = 'available',\n    pending = 'pending',\n    sold = 'sold',\n}\n/**pet status in the store*/\nexport const StatusOption = [\n    { label: StatusLabel.available, value: Status.available },\n    { label: StatusLabel.pending, value: Status.pending },\n    { label: StatusLabel.sold, value: Status.sold },\n];\n",
};
